"""Update MtoM for models v2

Revision ID: b1fc0494d4c9
Revises: b3ab898e6535
Create Date: 2023-11-24 14:59:43.075226

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

from src.v1.roles.constants import RolesChoices
from src.v1.roles.models import Role

# revision identifiers, used by Alembic.
revision: str = "b1fc0494d4c9"
down_revision: Union[str, None] = "8b79f3a82c40"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    session = Session(bind=op.get_bind())
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("roles_pkey")),
    )
    session.execute(sa.text("ALTER SEQUENCE roles_id_seq RESTART WITH 2"))
    default_role = Role(name=RolesChoices.DEFAULT, id=1)
    session.add(default_role)
    session.commit()
    op.create_table(
        "roles_to_users",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("roles_to_users_role_id_fkey"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("roles_to_users_user_id_fkey"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "role_id", name=op.f("roles_to_users_pkey")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles_to_users")
    op.drop_table("roles")
    # ### end Alembic commands ###
